import sys

def backtrack(v,w):
    s = [[0]]
    backtrack = [[""]]
    for i in range(len(v)):
        s.append([0])
        backtrack.append([""])
    for i in range(len(v)+1):
        for j in range(len(w)):
            s[i].append(0)
            backtrack[i].append("")
    for i in range(1, len(v)+1):
        for j in range(1, len(w)+1):
            match = 0
            if v[i-1] == w[j-1]:
                match = 1
            s[i][j] = max(s[i-1][j], s[i][j-1], s[i-1][j-1] + match)
            if s[i][j] == s[i-1][j]:
                backtrack[i][j] = "down"
            elif s[i][j] == s[i][j-1]:
                backtrack[i][j] = "right"
            elif s[i][j] == s[i-1][j-1] + 1:
                backtrack[i][j] = "diagonal"
    return backtrack

def lcs(backtrack, v):
    lcs = []
    i=len(backtrack)-1
    j=len(backtrack[0])-1
    while i>0 and j>0:
        if backtrack[i][j] == "diagonal":
            lcs.append(v[i-1])
            i -= 1
            j -= 1
        elif backtrack[i][j] == "down":
            i -= 1
        else:
            j -= 1
    lcs.reverse()
    return lcs


s = "TCGGTTGATAACCTAAAGGGAGTATTCCCTATAGCGAATATTTCGACTCCAGAAAGGAGTATAAGGCTGATAAGACACATTGACCAGATTTTGCAGTCGCGATAGGAGGTGCGCATCGAAACTTTCGGATAGGGCCTCTATAAGGATCCCATCCATATGTTACTAATCTTGCTCCTCTATACGTAGAATCAGTGTTGGCGGAACCACCTCACTTGCCCGCCCTTAAGTAATCAGCTTCTCAGGGTCCCGGTTTAGATAATGACGGATGCCGTAATGGCAAGAAGCAAATCCACGGGATTAACGCATCTTCACCCCGCAGTGAACTGTGACCCCCACCACCCACTAGACTATTGTTCAAACCCGAATTAATACCATAATCCGGCAATGTTATCTCCACCTGGCACCTGGCTTTCCTTAGGCCGAGCTTCTGGAGCAGTGGCTGAAGCATACGATGCTAGCGCCAGTCGTCCTGTTTGTATTTAATAATTGGGTGTAACAAAAACTGCCACCTATTGAGTTCGCTATACTCTCATGAGCCGTCCGTTAGTACCTCCCCGGTGGTTTGCATATGGTACACAGATCTTAAAGTCGCGAAGAGGTTTCTCACCCATTGGTTGGTTATATGTTCGTGTGGGACCTCCACGCTGCAAAGAAACCAGACGGGGGAGTTGGTAACATAAGACAGGGCCGTGCACCATCTGCGTTCTTCGAAGGTACCGGGCGCCGATAAGGCCACGTTCTTCCTCATAAGTGAAAAAATACTTGCTATCCTAAATCTAGCCACGGTATGACCCTCATTACGTCCCTTACGCCTGCACGGACTTGCATTAGTAGCCGAAGCCCGGTGCCAAACACTCGACTCTTGACTGACGGCTTTGTGAGTGACTTTGTAGAAATAGAGTAAAGCTGGATACTACCAGAGTTATGCTAAAGATAGGGGTCTTTTATTGAGCTCAGTCGC"
t = "CAGTGAGCTTTAGCGTCTGCGGGTCGGCGAGCGTCATGTTTACATGTCAGTCTCATATGTAGCCCAATCTTAATCCTGAGGGGTCAGATTTCAAACTTTATCAGTCCCTTTACACGGGCGATCACCTGATCCCTACACTATTTAAATTCTGTGAAAGTACACGAGTATATCTAATTATTTCCTACGTTTAAGATCTTAGCGCTAGCCCTAACCCAGCTTTGACTACAATCAACGGTATTATCTTACTGAGGACTTCCTGCCCATATTGATTTAGAAACTACCTCCTTTCGGTCACGCGTTTCAGCGAACCTTCGTACGTCACCTGACCACCACGGTCGTGAAAACATGTGAGTCTTGTTTCTATGGTCCGCGTAACCCAGCTGAAGGACGCGTAGTTCAATGGTGCGGCCTAAGGTACACGTTCATGCACGAAATGGTGAATCCTCCGCCGTCAGGAACGCTCATACTCGCCTTTCATGCGCAGAGGTAGTTATAAGGACGCTCGACTCGAACCGATCGATGCCGACCTGGCTAGGTTATTTTCAAGGTATTGCGCCGAGAACCGCCCTGATAAGCGCTCCCACCCCTCAACGCTCGCTGACGAGATCTGCGCGGTGTCAAGAAGCGCAGTTTAGCACTCAATCGATCTAGCATCGAAGTATCTAAAAAGAATATTCCATTGATCCGCCTCCTCGGTAACTTGGTAGCATAGAGTCGACAGGACCTAGATTATCGATTGATGTGGTGTAGCGCACAGTCCAACAAAGACGCCTGCTAGTTTGTGTCCGGCGTCAAGCATTGCGAACCCGTATGGTCGACCTAACCTTGCAATAGCGTTTTGCTCACAGCACCGCCCGTACACGAGACGGGTCAAGCAATGCAACGACACCTGCTAGGCGCCGTTCGAATAATAGCTCTAGGGTCGCCGCCCAATGTCC"
bt = backtrack(s,t)

output = lcs(bt, s)
f = ''.join(output)
print(f)
